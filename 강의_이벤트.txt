이벤트 
    : 사용자가 하는 행위(이벤트)를 감지(이벤트 루프)해서 등록된 기능(이벤트 핸들러)을 하는것

    console.dir(window) --> on으로 시작하는 속성 -> 이벤트 종류
        클릭, 키보드, 마우스, 기타

    1) document 객체 모델의 on으로 시작하는 이벤트 속성에 이벤트 핸들러 함수를 대입
       document.getElementById("button").onclick = function() { alert("이벤트1")}; };

       document.getElementById("button").onclick = function() { alert("이벤트2")}; };

    2) document객체의 addEventListener
        - 등록한 모든 이벤트 핸들러가 동작
        addEventListener("이벤트명",이벤트 핸들러,캡쳐링 여부 - false);

        캡쳐링
            : 이벤트가 발생한 요소를 위에서 아래로 이동하면서 찾는 과정

        버블링
            : 이벤트가 발생하면 상위로 이동하면서 계속 등록된 이벤트 핸들러 실행

        =========강의=========

    =========== jquery_event2.html

jQuery 이벤트
1. 이벤트명 -> 메서드
    $("선택자").click(이벤트 핸들러);
        console.dir(window) -> on으로 시작하는 속성

        window.ondbclick -> dbclick (이벤트 명)

    마우스 이벤트
        touch : 모바일 터치

        click() : 클릭 
        dbclick() : 더블 클릭 
        mouseout() : 자식 요소 까지
        mouseover() : 

        mouseenter() : 본인요소
        mounseleave() : 

        mousedown() : 마우스키를 누른 상태
        mouseup() :마우스 키를 눌렀다 뗄때

        mousemove() : 마우스 커서가 움직일때

        scroll() : 마우스 스크롤 휠 움직일때 
    
    포커스 이벤트
        focus(): 입력 항목에 커서가 가 있을때

        blur(): 입력 항목에서 커서가 제거 되었을때


    키보드 이벤트
        키를 누른 상태일때
        keypress() - 계속 발생(일부 키는 제외)
        keydown() - 1번만 발생(모든 키)

        키를 눌럿다 뗄때
        keyup()

    기타
        resize() : 윈도우 창의 사이즈가 변경이 될때
        change() : select로 선택을 하거나 또는 file 선택을 했을때 발생하는 이벤트


========== jquery_event3.html===========
2. 바인드 메서드
    - on : 이벤트를 여러개 등록하는 경우

    1) 여러 이벤트에 동일 이벤트 핸들러 등록
        $(선택자).on("이벤트명 이벤트명...", 이벤트 핸들러)

    2) 여러 이벤트에 각각의 이벤트 핸들러 등록
        $(선택자).on({
            "이벤트 종류1" : 이벤트 핸들러1,
            "이벤트 종류2" : 이벤트 핸들러
        });

    - live 이벤트
        동적ㅇ




        
        